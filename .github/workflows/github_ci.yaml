name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: track
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Backend setup
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12' # Задайте нужную версию Python

    - name: Install backend dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run backend tests
      working-directory: ./backend
      run: |
        pytest

    # # Frontend setup
    # - name: Set up Node.js
    #   uses: actions/setup-node@v3
    #   with:
    #     node-version: '16' # Задайте нужную версию Node.js

    # - name: Install frontend dependencies
    #   working-directory: ./frontend
    #   run: npm install

    # - name: Run frontend build
    #   working-directory: ./frontend
    #   run: npm run build

    # # Optionally, you can add frontend tests here
    # # - name: Run frontend tests
    # #   working-directory: ./frontend
    # #   run: npm test
